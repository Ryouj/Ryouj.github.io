<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>CICD开发实战之kuebdp</title>
    <link href="/2024/05/21/CICD%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98%E4%B9%8Bkuebdp/"/>
    <url>/2024/05/21/CICD%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98%E4%B9%8Bkuebdp/</url>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><ul><li> 某政务云环境网络不通，无法直接连k8s进行服务更新，所以造了个go轮子结合jenkins做cicd<h3 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h3></li><li>编写kubedp服务，通过client-go更新k8s服务镜像</li><li>集群部署kubedp服务，映射接口到外网</li><li>编写jenkinsfile调用kubedp实现cicd<h3 id="一、kubedp编写"><a href="#一、kubedp编写" class="headerlink" title="一、kubedp编写"></a>一、kubedp编写</h3></li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> main<br><br><span class="hljs-keyword">import</span> (<br><span class="hljs-string">&quot;context&quot;</span> <br><span class="hljs-string">&quot;encoding/json&quot;</span><br><span class="hljs-string">&quot;fmt&quot;</span><br><span class="hljs-string">&quot;log&quot;</span><br><span class="hljs-string">&quot;net/http&quot;</span><br><span class="hljs-string">&quot;os&quot;</span><br><span class="hljs-string">&quot;path/filepath&quot;</span><br><br><span class="hljs-string">&quot;golang.org/x/crypto/bcrypt&quot;</span><br><span class="hljs-string">&quot;k8s.io/apimachinery/pkg/api/errors&quot;</span><br>metav1 <span class="hljs-string">&quot;k8s.io/apimachinery/pkg/apis/meta/v1&quot;</span><br><span class="hljs-string">&quot;k8s.io/client-go/kubernetes&quot;</span><br><span class="hljs-string">&quot;k8s.io/client-go/rest&quot;</span><br><span class="hljs-string">&quot;k8s.io/client-go/tools/clientcmd&quot;</span><br><span class="hljs-string">&quot;k8s.io/client-go/util/homedir&quot;</span><br>)<br><br><span class="hljs-keyword">var</span> validPassword <span class="hljs-type">string</span> <span class="hljs-comment">// 存储加密后的密码</span><br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">init</span><span class="hljs-params">()</span></span> &#123;<br><span class="hljs-comment">// 初始化密码</span><br>hashedPassword, err := bcrypt.GenerateFromPassword([]<span class="hljs-type">byte</span>(<span class="hljs-string">&quot;12345678&quot;</span>), bcrypt.DefaultCost)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>log.Fatalf(<span class="hljs-string">&quot;Failed to hash password: %v&quot;</span>, err)<br>&#125;<br>validPassword = <span class="hljs-type">string</span>(hashedPassword)<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">checkAuth</span><span class="hljs-params">(username, password <span class="hljs-type">string</span>)</span></span> <span class="hljs-type">bool</span> &#123;<br>err := bcrypt.CompareHashAndPassword([]<span class="hljs-type">byte</span>(validPassword), []<span class="hljs-type">byte</span>(password))<br><span class="hljs-keyword">return</span> err == <span class="hljs-literal">nil</span><br>&#125;<br><br><span class="hljs-keyword">type</span> DeployRequest <span class="hljs-keyword">struct</span> &#123;<br>Namespace      <span class="hljs-type">string</span> <span class="hljs-string">`json:&quot;namespace&quot;`</span><br>DeploymentName <span class="hljs-type">string</span> <span class="hljs-string">`json:&quot;deploymentName&quot;`</span><br>ContainerName  <span class="hljs-type">string</span> <span class="hljs-string">`json:&quot;containerName&quot;`</span><br>NewImage       <span class="hljs-type">string</span> <span class="hljs-string">`json:&quot;newImage&quot;`</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">handleDeploy</span><span class="hljs-params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;<br><span class="hljs-keyword">if</span> r.Method != http.MethodPost &#123;<br>http.Error(w, <span class="hljs-string">&quot;Method Not Allowed&quot;</span>, http.StatusMethodNotAllowed)<br><span class="hljs-keyword">return</span><br>&#125;<br><br>decoder := json.NewDecoder(r.Body)<br><span class="hljs-keyword">var</span> deployReq DeployRequest<br><span class="hljs-keyword">if</span> err := decoder.Decode(&amp;deployReq); err != <span class="hljs-literal">nil</span> &#123;<br>http.Error(w, <span class="hljs-string">&quot;Bad Request&quot;</span>, http.StatusBadRequest)<br><span class="hljs-keyword">return</span><br>&#125;<br><br>username, password, ok := r.BasicAuth()<br><span class="hljs-keyword">if</span> !ok || !checkAuth(username, password) &#123;<br>http.Error(w, <span class="hljs-string">&quot;Unauthorized&quot;</span>, http.StatusUnauthorized)<br><span class="hljs-keyword">return</span><br>&#125;<br><br>clientset, err := getClientSet()<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>http.Error(w, fmt.Sprintf(<span class="hljs-string">&quot;Failed to get clientset: %v&quot;</span>, err), http.StatusInternalServerError)<br><span class="hljs-keyword">return</span><br>&#125;<br><br>err = UpdateDeploymentImage(clientset, deployReq.Namespace, deployReq.DeploymentName, deployReq.ContainerName, deployReq.NewImage)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>http.Error(w, fmt.Sprintf(<span class="hljs-string">&quot;Failed to update deployment: %v&quot;</span>, err), http.StatusInternalServerError)<br><span class="hljs-keyword">return</span><br>&#125;<br><br>fmt.Fprintln(w, <span class="hljs-string">&quot;Deployment image updated successfully.&quot;</span>)<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">UpdateDeploymentImage</span><span class="hljs-params">(clientset *kubernetes.Clientset, namespace, deploymentName, containerName, newImage <span class="hljs-type">string</span>)</span></span> <span class="hljs-type">error</span> &#123;<br><span class="hljs-comment">// 获取Deployment</span><br>deployment, err := clientset.AppsV1().Deployments(namespace).Get(context.TODO(), deploymentName, metav1.GetOptions&#123;&#125;)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-keyword">if</span> errors.IsNotFound(err) &#123;<br><span class="hljs-keyword">return</span> fmt.Errorf(<span class="hljs-string">&quot;Deployment %s not found&quot;</span>, deploymentName)<br>&#125;<br><span class="hljs-keyword">return</span> fmt.Errorf(<span class="hljs-string">&quot;Failed to get deployment: %v&quot;</span>, err)<br>&#125;<br><br><span class="hljs-comment">// 更新镜像</span><br>updated := <span class="hljs-literal">false</span><br><span class="hljs-keyword">for</span> i := <span class="hljs-keyword">range</span> deployment.Spec.Template.Spec.Containers &#123;<br><span class="hljs-keyword">if</span> deployment.Spec.Template.Spec.Containers[i].Name == containerName &#123;<br>deployment.Spec.Template.Spec.Containers[i].Image = newImage<br>updated = <span class="hljs-literal">true</span><br><span class="hljs-keyword">break</span><br>&#125;<br>&#125;<br><span class="hljs-keyword">if</span> !updated &#123;<br><span class="hljs-keyword">return</span> fmt.Errorf(<span class="hljs-string">&quot;Container %s not found in Deployment&quot;</span>, containerName)<br>&#125;<br><br><span class="hljs-comment">// 更新Deployment</span><br>_, err = clientset.AppsV1().Deployments(namespace).Update(context.TODO(), deployment, metav1.UpdateOptions&#123;&#125;)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-keyword">return</span> fmt.Errorf(<span class="hljs-string">&quot;Failed to update deployment: %v&quot;</span>, err)<br>&#125;<br><br><span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span><br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">getClientSet</span><span class="hljs-params">()</span></span> (*kubernetes.Clientset, <span class="hljs-type">error</span>) &#123;<br><span class="hljs-comment">// 尝试从in-cluster配置加载</span><br>config, err := rest.InClusterConfig()<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-keyword">if</span> err == rest.ErrNotInCluster &#123;<br><span class="hljs-comment">// 如果不在集群内，尝试从kubeconfig文件加载</span><br>kubeconfigPath := os.Getenv(<span class="hljs-string">&quot;KUBECONFIG&quot;</span>)<br><span class="hljs-keyword">if</span> kubeconfigPath == <span class="hljs-string">&quot;&quot;</span> &#123;<br><span class="hljs-keyword">if</span> home := homedir.HomeDir(); home != <span class="hljs-string">&quot;&quot;</span> &#123;<br>kubeconfigPath = filepath.Join(home, <span class="hljs-string">&quot;.kube&quot;</span>, <span class="hljs-string">&quot;config&quot;</span>)<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span>, fmt.Errorf(<span class="hljs-string">&quot;Cannot determine default kubeconfig path&quot;</span>)<br>&#125;<br>&#125;<br><br><span class="hljs-comment">// 使用kubeconfig路径创建配置</span><br>config, err = clientcmd.BuildConfigFromFlags(<span class="hljs-string">&quot;&quot;</span>, kubeconfigPath)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span>, fmt.Errorf(<span class="hljs-string">&quot;Failed to create out-of-cluster config: %v&quot;</span>, err)<br>&#125;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span>, fmt.Errorf(<span class="hljs-string">&quot;Failed to create in-cluster config: %v&quot;</span>, err)<br>&#125;<br>&#125;<br><br><span class="hljs-comment">// 使用加载的配置创建clientset</span><br>clientset, err := kubernetes.NewForConfig(config)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span>, fmt.Errorf(<span class="hljs-string">&quot;Failed to create clientset: %v&quot;</span>, err)<br>&#125;<br><br><span class="hljs-keyword">return</span> clientset, <span class="hljs-literal">nil</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br>http.HandleFunc(<span class="hljs-string">&quot;/kubedp/&quot;</span>, handleDeploy)<br>log.Printf(<span class="hljs-string">&quot;Starting server on :8080...&quot;</span>)<br><span class="hljs-keyword">if</span> err := http.ListenAndServe(<span class="hljs-string">&quot;:8080&quot;</span>, <span class="hljs-literal">nil</span>); err != <span class="hljs-literal">nil</span> &#123;<br>log.Fatalf(<span class="hljs-string">&quot;Could not start server: %v&quot;</span>, err)<br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><ul><li>测试<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sh">curl --location --request POST <span class="hljs-string">&#x27;https://127.0.0.1:8080/kubedp/&#x27;</span> \<br>--header <span class="hljs-string">&#x27;Content-Type: application/json&#x27;</span> \<br>--header <span class="hljs-string">&#x27;Authorization: Basic YWRtaW46RWNvbmFnZUAxMjM=&#x27;</span> \<br>--data-raw <span class="hljs-string">&#x27;&#123;</span><br><span class="hljs-string">    &quot;namespace&quot;: &quot;default&quot;,</span><br><span class="hljs-string">    &quot;deploymentName&quot;: &quot;nginx&quot;,</span><br><span class="hljs-string">    &quot;containerName&quot;: &quot;nginx&quot;,</span><br><span class="hljs-string">    &quot;newImage&quot;: &quot;1.23&quot;</span><br><span class="hljs-string">&#125;&#x27;</span><br>返回成功消息<br></code></pre></td></tr></table></figure></li></ul><h3 id="二、kubedp构建打包"><a href="#二、kubedp构建打包" class="headerlink" title="二、kubedp构建打包"></a>二、kubedp构建打包</h3><ul><li><p>创建Dockerfile文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">使用官方的Golang镜像作为基础镜像</span><br>FROM golang:1.22.3-bullseye AS build<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">设置工作目录</span><br>WORKDIR /app<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">将当前目录下的所有文件复制到容器的/app目录下</span><br>COPY . .<br><br>ENV GOPROXY=https://goproxy.cn,direct<br><br>ARG TARGETOS<br>ARG TARGETARCH<br><span class="hljs-meta prompt_"># </span><span class="language-bash">安装任何需要的依赖</span><br>RUN go mod download<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">编译你的Go应用</span><br>RUN go mod tidy<br>RUN GOARCH=$&#123;TARGETARCH&#125;  GOOS=linux CGO_ENABLED=0 go build -o main .<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">使用alpine镜像作为最终运行的基础镜像</span><br>FROM alpine:latest<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">设置工作目录</span><br>WORKDIR /app<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">从上一阶段拷贝编译后的二进制文件到新镜像中</span><br>COPY --from=build /app/main /app/<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">运行你的应用</span><br>ENTRYPOINT [&quot;/app/main&quot;]<br><br></code></pre></td></tr></table></figure></li><li><p>构建kuebdp服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker buildx build --platform linux/arm64,linux/amd64 -t registry.cn-hangzhou.aliyuncs.com/itseeds/kubedp:v2 . --push<br></code></pre></td></tr></table></figure></li><li><p>在k8s集群运行kuebdp服务</p></li><li><p>kubedp.yaml</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs shell">apiVersion: apps/v1<br>kind: Deployment<br>metadata:<br>  name: kubedp-deployment<br>spec:<br>  replicas: 1<br>  selector:<br>    matchLabels:<br>      app: kubedp<br>  template:<br>    metadata:<br>      labels:<br>        app: kubedp<br>    spec:<br>      containers:<br>        - name: kubedp-container<br>          image: registry.cn-hangzhou.aliyuncs.com/itseeds/kubedp:v2<br>          ports:<br>            - containerPort: 8080<br>---<br>apiVersion: rbac.authorization.k8s.io/v1<br>kind: ClusterRole<br>metadata:<br>  name: kubedp-role<br>rules:<br>  - apiGroups: [&quot;apps&quot;]<br>    resources: [&quot;deployments&quot;]<br>    verbs: [&quot;get&quot;, &quot;update&quot;]<br>  - apiGroups: [&quot;&quot;]<br>    resources: [&quot;pods&quot;]<br>    verbs: [&quot;list&quot;, &quot;get&quot;, &quot;delete&quot;]<br><br>---<br>apiVersion: v1<br>kind: ServiceAccount<br>metadata:<br>  name: kubedp-sa<br>---<br>apiVersion: rbac.authorization.k8s.io/v1<br>kind: RoleBinding<br>metadata:<br>  name: kubedp-binding<br>subjects:<br>  - kind: ServiceAccount<br>    name: kubedp-sa<br>roleRef:<br>  kind: ClusterRole<br>  name: kubedp-role<br>  apiGroup: rbac.authorization.k8s.io<br></code></pre></td></tr></table></figure></li><li><p>kubectl apply -f kubedp.yaml</p></li><li><p>完成kubedp部署</p><h3 id="jenkinsfile流水线编写"><a href="#jenkinsfile流水线编写" class="headerlink" title="jenkinsfile流水线编写"></a>jenkinsfile流水线编写</h3></li><li><p>jenkinsfile.groovy</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!groovy</span><br><br>@Library(&#x27;jenkinslibrary@master&#x27;) _<br><br>    import org.devops.*<br><br>    def common = new org.devops.common()<br>    def deploy = new org.devops.deploy()<br>    def mytools = new org.devops.tools()<br>    def gitlab = new org.devops.gitlab()<br><br><br>    String profile = &quot;$&#123;env.profile&#125;&quot;<br>    String product = &quot;$&#123;env.product&#125;&quot;<br>    String srvName = &quot;$&#123;env.srvName&#125;&quot;<br>    String imageTag = &quot;$&#123;env.imageTag&#125;&quot;<br><br>    currentBuild.description = &quot;发布产品线: $&#123;product&#125; \n 发布环境: $&#123;profile&#125; \n 服务名: $&#123;srvName&#125; \n 版本: $&#123;imageTag&#125;&quot;<br><br>    pipeline &#123;<br>            <br>        agent &#123; label &#x27;master&#x27; &#125;<br>        <br>        options &#123;<br>            // 并发构建<br>            // disableConcurrentBuilds()<br>            // timeout(time: 1, unit: &#x27;HOURS&#x27;)<br>            timeout(time: 15, unit: &#x27;MINUTES&#x27;)<br>            //保持构建的最大个数<br>            buildDiscarder(logRotator(daysToKeepStr: &#x27;15&#x27;, numToKeepStr: &#x27;20&#x27;))<br>            timestamps()<br>        &#125;<br><br>        environment &#123;<br>            userName = common.getBuildUser()<br>        &#125;<br><br>        stages &#123;<br>            <br>            stage(&#x27;ImageTagIsNull&#x27;)&#123;<br>                steps&#123;<br>                    script&#123;<br>                        if(imageTag)&#123;<br>                            return true<br>                        &#125; else &#123;<br>                            currentBuild.result = &#x27;FAILURE&#x27;<br>                            throw new IllegalArgumentException(&quot;ERROR: 请选择镜像版本&quot;)<br>                            <br>                        &#125;<br>                    &#125;<br>                &#125;<br>            &#125;<br>            stage(&#x27;Deployment&#x27;)&#123;<br>                steps&#123;<br>                    script&#123;<br>                        mytools.PrintMes(&quot;k8s apply&quot;,&quot;green&quot;)<br>                        deploy.kubedphangzhou(product,srvName,imageTag,profile)<br>                   &#125;<br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br><br><br></code></pre></td></tr></table></figure></li><li><p>构造发布请求</p></li><li><p>deploy.groovy</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs shell">package org.devops<br>def kubedphangzhou(product,srvName,imageTag,profile)&#123;<br>        def kubedphangzhou = &quot;https://127.0.0.1:8080/kubedp/&quot;<br>        println(kubedphangzhou)<br>        def reqBody = &quot;&quot;&quot;<br>            &#123;<br>                &quot;namespace&quot;: &quot;af-prod&quot;,<br>                &quot;deploymentName&quot;: &quot;$&#123;srvName&#125;-$&#123;profile&#125;&quot;,<br>                &quot;containerName&quot;: &quot;$&#123;srvName&#125;&quot;,<br>                &quot;newImage&quot;: &quot;registry.cn-hangzhou.aliyuncs.com/itseeds/$&#123;srvName&#125;:$&#123;imageTag&#125;&quot;<br>            &#125;<br>            &quot;&quot;&quot;<br>        // 添加Basic Auth信息<br>        def authString = &quot;admin:12345678&quot;.getBytes(&#x27;UTF-8&#x27;).encodeBase64().toString().replaceAll(&quot;\\n&quot;, &quot;&quot;) // 注意UTF-8编码<br>        def authHeader = &quot;Basic $&#123;authString&#125;&quot;<br><br>        def httpResponse = httpRequest contentType: &#x27;APPLICATION_JSON&#x27;,<br>                httpMode: &#x27;POST&#x27;,<br>                ignoreSslErrors: true,<br>                requestBody: reqBody,<br>                customHeaders: [[name: &#x27;Authorization&#x27;, value: authHeader]],<br>                responseHandle: &#x27;NONE&#x27;,<br>                url: &quot;$&#123;kubedphangzhou&#125;&quot;,<br>                quiet: true<br>        println(httpResponse.content)<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h3 id="四、创建jenkins-k8s-cd构建流水线"><a href="#四、创建jenkins-k8s-cd构建流水线" class="headerlink" title="四、创建jenkins k8s cd构建流水线"></a>四、创建jenkins k8s cd构建流水线</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><br></code></pre></td></tr></table></figure><h3 id="五、构建测试-完"><a href="#五、构建测试-完" class="headerlink" title="五、构建测试 完"></a>五、构建测试 完</h3>]]></content>
    
    
    <categories>
      
      <category>k8s</category>
      
      <category>go</category>
      
      <category>cicd</category>
      
    </categories>
    
    
    <tags>
      
      <tag>cicd</tag>
      
      <tag>go</tag>
      
      <tag>k8s</tag>
      
      <tag>kubedp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker之Buildx跨平台编译镜像.md</title>
    <link href="/2024/04/22/docker%E4%B9%8Bbuildx%E8%B7%A8%E5%B9%B3%E5%8F%B0%E7%BC%96%E8%AF%91%E9%95%9C%E5%83%8F/"/>
    <url>/2024/04/22/docker%E4%B9%8Bbuildx%E8%B7%A8%E5%B9%B3%E5%8F%B0%E7%BC%96%E8%AF%91%E9%95%9C%E5%83%8F/</url>
    
    <content type="html"><![CDATA[<p>-</p><h2 id="docker之buildx跨平台编译镜像"><a href="#docker之buildx跨平台编译镜像" class="headerlink" title="docker之buildx跨平台编译镜像"></a>docker之buildx跨平台编译镜像</h2><ul><li>下载buildx二进制文件</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">下载二进制buildx<br>https://github.com/docker/buildx/tree/v0<span class="hljs-number">.10</span><span class="hljs-number">.4</span><br><br>$ mkdir -p ~/.docker/cli-plugins<br>$ mv buildx ~/.docker/cli-plugins/docker-buildx<br></code></pre></td></tr></table></figure><ul><li>buildx命令测试</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">docker buildx build .<br></code></pre></td></tr></table></figure><ul><li><strong>创建 <code>builder</code></strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python">启动 builder<br>docker buildx create --name mybuilder<br><br><span class="hljs-number">1.</span> 查看 mybuilder 的构建平台支持情况:<br>docker buildx inspect mybuilder<br>如果未包含 linux/arm64,需要添加该平台支持。<br><span class="hljs-number">2.</span> 修改 mybuilder,添加 linux/arm64 支持:<br>docker buildx create --name mybuilder --platform linux/amd64,linux/arm64<br><span class="hljs-number">3.</span> 如果主机本身不支持 linux/arm64,需要启用 buildkit 模式与远程 docker 引擎集成,在创建时指定:<br>docker buildx create --name mybuilder --use --platform linux/amd64,linux/arm64  --buildkitd-flags <span class="hljs-string">&quot;--allow-insecure-entitlement security.insecure&quot;</span><br></code></pre></td></tr></table></figure><ul><li>启动 <strong><code>builder</code></strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">docker buildx inspect --bootstrap mybuilder<br><br>查看<br>docker buildx ls<br><br>其中 PLATFORMS 一列所展示的值 linux/arm64, linux/amd64, linux/riscv64, linux/ppc64le, linux/s390x, linux/<span class="hljs-number">386</span>, linux/mips64le, linux/mips64, linux/arm/v7, linux/arm/v6 就是当前构建器所支持的所有平台了。<br><br></code></pre></td></tr></table></figure><ul><li><strong>使用 <code>builder</code> 构建跨平台镜像</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><br>docker buildx use mybuilder<br><br>docker buildx build --platform linux/arm64,linux/amd64 -t registry.vpcflow.com/snapshot/gateway-web:<span class="hljs-number">20230810181025</span>-master-<span class="hljs-number">3.1</span>-c718fe48 .<br><br><span class="hljs-number">1.</span> 没有在 docker buildx build 命令中指定 --push、`--load` 或者 --output 参数。<br><span class="hljs-number">2.</span> 使用了 docker-container 驱动,这个驱动默认不会输出镜像。<br>要解决这个问题,可以:<br><span class="hljs-number">1.</span> 加上 --load 参数,构建完成后会把镜像加载到本地 Docker:<br>docker buildx build --load <br><span class="hljs-number">2.</span> 加上 --push 参数,把镜像推送到远程仓库:<br>docker buildx build --push<br> <br><span class="hljs-number">3.</span> 使用 --output 参数导出镜像到本地文件:<br>docker buildx build --output=image.tar<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>cicd</tag>
      
      <tag>buildx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker之Manifest多平台镜像合并推送清单</title>
    <link href="/2024/04/22/docker%E4%B9%8Bmanifest%E5%A4%9A%E5%B9%B3%E5%8F%B0%E9%95%9C%E5%83%8F%E5%90%88%E5%B9%B6%E6%8E%A8%E9%80%81%E6%B8%85%E5%8D%95/"/>
    <url>/2024/04/22/docker%E4%B9%8Bmanifest%E5%A4%9A%E5%B9%B3%E5%8F%B0%E9%95%9C%E5%83%8F%E5%90%88%E5%B9%B6%E6%8E%A8%E9%80%81%E6%B8%85%E5%8D%95/</url>
    
    <content type="html"><![CDATA[<h2 id="构建各平台的镜像并推送多平台清单"><a href="#构建各平台的镜像并推送多平台清单" class="headerlink" title="构建各平台的镜像并推送多平台清单"></a>构建各平台的镜像并推送多平台清单</h2><ul><li>先分别构建 ARM 和 AMD64 平台的镜像，推送到仓库后</li><li>使用docker manifest 命令创建一个多平台镜像清单</li></ul><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gradle">docker manifest create harbor-ops.itseeds.com<span class="hljs-regexp">/base/</span>openjdk:<span class="hljs-number">17</span>-alpine-env harbor-ops.itseeds.com<span class="hljs-regexp">/base/</span>openjdk:<span class="hljs-number">17</span>-alpine-env-amd64 harbor-ops.itseeds.com<span class="hljs-regexp">/base/</span>openjdk:<span class="hljs-number">17</span>-alpine-env-arm64<br>docker manifest <span class="hljs-keyword">push</span> harbor-ops.itseeds.com<span class="hljs-regexp">/base/</span>openjdk:<span class="hljs-number">17</span>-alpine-env<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>cicd</tag>
      
      <tag>buildx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ansible-KubeSpray部署k8s集群</title>
    <link href="/2024/04/22/KubeSpray%E9%83%A8%E7%BD%B2k8s%E9%9B%86%E7%BE%A4/"/>
    <url>/2024/04/22/KubeSpray%E9%83%A8%E7%BD%B2k8s%E9%9B%86%E7%BE%A4/</url>
    
    <content type="html"><![CDATA[<h3 id="git：https-github-com-kubernetes-sigs-kubespray-git"><a href="#git：https-github-com-kubernetes-sigs-kubespray-git" class="headerlink" title="git：https://github.com/kubernetes-sigs/kubespray.git"></a>git：<a href="https://github.com/kubernetes-sigs/kubespray.git">https://github.com/kubernetes-sigs/kubespray.git</a></h3><h3 id="version：-release-2-24"><a href="#version：-release-2-24" class="headerlink" title="version：**release-2.24**"></a>version：**<code>release-2.24</code>**</h3><h2 id="集群规划"><a href="#集群规划" class="headerlink" title="集群规划"></a><strong>集群规划<a href="https://labdoc.cc/zh-hans/article/60/#%E9%9B%86%E7%BE%A4%E8%A7%84%E5%88%92"></a></strong></h2><table><thead><tr><th>角色</th><th>主机名</th><th>备注</th></tr></thead><tbody><tr><td>Ansible-CLient</td><td>Node190</td><td>内存最低≥4G</td></tr><tr><td>Conntrl-plan</td><td>node1、node2、node3</td><td></td></tr><tr><td>Etcd</td><td>node1、node2、node3</td><td></td></tr><tr><td>Worker</td><td>node1、node2、node3</td><td></td></tr></tbody></table><h2 id="客户端基础设置"><a href="#客户端基础设置" class="headerlink" title="客户端基础设置"></a><strong>客户端基础设置</strong></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>systemctl stop firewalld.service &amp;&amp; systemctl <span class="hljs-built_in">disable</span> firewalld.service<br><br></code></pre></td></tr></table></figure><h3 id="安装-docker"><a href="#安装-docker" class="headerlink" title="安装 docker"></a><strong>安装 docker</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun<br><br></code></pre></td></tr></table></figure><p>配置 Docker 加速 和 信任仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF | sudo tee /etc/docker/daemon.json</span><br><span class="hljs-string">&#123;</span><br><span class="hljs-string">  &quot;registry-mirrors&quot;: [</span><br><span class="hljs-string">    &quot;https://registry.docker-cn.com&quot;,</span><br><span class="hljs-string">    &quot;https://docker.mirrors.ustc.edu.cn&quot;,</span><br><span class="hljs-string">    &quot;https://hub-mirror.c.163.com&quot;,</span><br><span class="hljs-string">    &quot;https://mirror.ccs.tencentyun.com&quot;,</span><br><span class="hljs-string">    &quot;https://reg-mirror.qiniu.com&quot;,</span><br><span class="hljs-string">    &quot;https://dockerhub.azk8s.cn&quot;</span><br><span class="hljs-string">  ],</span><br><span class="hljs-string">  &quot;insecure-registries&quot;: [</span><br><span class="hljs-string">    &quot;192.168.0.190:5000&quot;</span><br><span class="hljs-string">  ]</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string">EOF</span><br><br></code></pre></td></tr></table></figure><p>启动 Docker</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ systemctl start docker<br><br></code></pre></td></tr></table></figure><p>后需要用到的包，建议直接安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ yum install -y wget git unzip sshpass<br><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ yum install get<br>$ git <span class="hljs-built_in">clone</span> https://github.com/kubernetes-sigs/kubespray.git<br>正克隆到 <span class="hljs-string">&#x27;kubespray&#x27;</span>...<br>remote: Enumerating objects: 66750, <span class="hljs-keyword">done</span>.<br>remote: Counting objects: 100% (5/5), <span class="hljs-keyword">done</span>.<br>remote: Compressing objects: 100% (5/5), <span class="hljs-keyword">done</span>.<br>remote: Total 66750 (delta 1), reused 0 (delta 0), pack-reused 66745<br>接收对象中: 100% (66750/66750), 20.88 MiB | 5.91 MiB/s, <span class="hljs-keyword">done</span>.<br>处理 delta 中: 100% (37545/37545), <span class="hljs-keyword">done</span>.<br><br>$ <span class="hljs-built_in">cd</span> kubespray<br><br>$ git checkout -f release-2.24<br></code></pre></td></tr></table></figure><h3 id="配置免密登录"><a href="#配置免密登录" class="headerlink" title="配置免密登录"></a><strong>配置免密登录</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 创建 key</span><br>$ ssh-keygen -t rsa -P <span class="hljs-string">&#x27;&#x27;</span> -f ~/.ssh/id_rsa<br><br><span class="hljs-comment"># 安装 sshpass</span><br>$ yum install -y sshpass<br><br><span class="hljs-comment"># 配置 免密登录</span><br>$ <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> &#123;211..213&#125;; <span class="hljs-keyword">do</span> sshpass -p <span class="hljs-string">&#x27;econage@123&#x27;</span> ssh-copy-id -o stricthostkeychecking=no root@192.168.0.<span class="hljs-variable">$i</span> ; <span class="hljs-keyword">done</span><br><br></code></pre></td></tr></table></figure><h2 id="配置-Kubespray"><a href="#配置-Kubespray" class="headerlink" title="配置 Kubespray"></a><strong>配置 Kubespray</strong></h2><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs clojure">cp -r inventory/sample inventory/mycluster<br></code></pre></td></tr></table></figure><p>• 在 control_plane 安装 kubectl 和 ~/.kube/config</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs clojure">$ tee -a inventory/mycluster/group_vars/k<span class="hljs-number">8</span>s_cluster/k<span class="hljs-number">8</span>s-cluster.yml &lt;&lt;EOF<br># master 配置 ~/.kube/config<br>kubeconfig_localhost: <span class="hljs-literal">true</span><br># master 安装 kubectl<br>kubectl_localhost: <span class="hljs-literal">true</span><br>EOF<br></code></pre></td></tr></table></figure><p>• 给API 负载均衡域名设置，有多个集群时好区分  （可略过）</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs clojure"><br>$ tee -a inventory/mycluster/group_vars/all/all.yml &lt;&lt;EOF<br>apiserver_loadbalancer_domain_name: <span class="hljs-string">&quot;k8s.labdoc.cc&quot;</span><br># 负载均衡根据自己需要设置<br># loadbalancer_apiserver:<br>#   address: <span class="hljs-number">1.2</span>.<span class="hljs-number">3.4</span><br>#   port: <span class="hljs-number">1234</span><br>EOF<br></code></pre></td></tr></table></figure><p>• 支持 metrics</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs clojure"># metrics_server_enabled 改为 <span class="hljs-literal">true</span><br>$ sed -i &#x27;s/metrics_server_enabled: <span class="hljs-literal">false</span>/metrics_server_enabled: <span class="hljs-literal">true</span>/&#x27; inventory/mycluster/group_vars/k<span class="hljs-number">8</span>s_cluster/addons.yml<br># 去掉 metrics_server 的注释<br>$ sed -i &#x27;/metrics_server_/s/^# //&#x27; inventory/mycluster/group_vars/k<span class="hljs-number">8</span>s_cluster/addons.yml<br></code></pre></td></tr></table></figure><p>• Metallb: docs/metallb.md （可略过）</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs clojure"># 设置 kube_proxy_strict_arp<br>$ sed -i &#x27;s/kube_proxy_strict_arp: <span class="hljs-literal">false</span>/kube_proxy_strict_arp: <span class="hljs-literal">true</span>/&#x27; inventory/mycluster/group_vars/k<span class="hljs-number">8</span>s_cluster/k<span class="hljs-number">8</span>s-cluster.yml<br><br># 启用 Metallb<br>$ sed -i &#x27;s/metallb_enabled: <span class="hljs-literal">false</span>/metallb_enabled: <span class="hljs-literal">true</span>/&#x27; inventory/mycluster/group_vars/k<span class="hljs-number">8</span>s_cluster/addons.yml<br># 设置 LoadBalancer IP范围<br>$ tee -a inventory/mycluster/group_vars/k<span class="hljs-number">8</span>s_cluster/addons.yml &lt;&lt;EOF<br>metallb_speaker_enabled: <span class="hljs-literal">true</span><br>metallb_avoid_buggy_ips: <span class="hljs-literal">true</span><br>metallb_ip_range:<br>  - <span class="hljs-string">&quot;192.168.8.80-192.168.8.89&quot;</span><br>EOF<br><br></code></pre></td></tr></table></figure><p><strong>进入配置环境</strong></p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs clojure"><br></code></pre></td></tr></table></figure><p><strong>生成 hosts.yaml 文件</strong></p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs clojure"># 修改下面的 IP起、至及地址段<br>$ declare -a IPS=$(<span class="hljs-name"><span class="hljs-built_in">for</span></span> i in &#123;<span class="hljs-number">211.</span>.213&#125;<span class="hljs-comment">; do echo 192.168.0.$i; done)</span><br><br># 生成 inventory/mycluster/hosts.yaml 文件<br>$ CONFIG_FILE=inventory/mycluster/hosts.yaml python3 contrib/inventory_builder/inventory.py $&#123;IPS[@]&#125;<br><br></code></pre></td></tr></table></figure><p>k8s-cluster配置</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs clojure"><br></code></pre></td></tr></table></figure><p><strong>(可选)配置Daocloud国内加速</strong></p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs clojure">$ cp inventory/mycluster/group_vars/all/offline.yml inventory/mycluster/group_vars/all/mirror.yml<br><br># 国内加速关键配置<br>$ sed -i &#x27;/&#123;&#123; files_repo/s/^# //&#x27; inventory/mycluster/group_vars/all/mirror.yml<br>$ tee -a inventory/mycluster/group_vars/all/mirror.yml &lt;&lt;EOF<br>gcr_image_repo: <span class="hljs-string">&quot;gcr.m.daocloud.io&quot;</span><br>kube_image_repo: <span class="hljs-string">&quot;k8s.m.daocloud.io&quot;</span><br>docker_image_repo: <span class="hljs-string">&quot;docker.m.daocloud.io&quot;</span><br>quay_image_repo: <span class="hljs-string">&quot;quay.m.daocloud.io&quot;</span><br>github_image_repo: <span class="hljs-string">&quot;ghcr.m.daocloud.io&quot;</span><br>files_repo: <span class="hljs-string">&quot;https://files.m.daocloud.io&quot;</span><br>EOF<br><br></code></pre></td></tr></table></figure><h3 id="运行kubespray-运行环境"><a href="#运行kubespray-运行环境" class="headerlink" title="运行kubespray 运行环境"></a>运行kubespray 运行环境</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run --name kubespray -d -it --privileged \<br>  -v ~/kubespray/:/kubespray/ \<br>  -v ~/.ssh/id_rsa:/root/.ssh/id_rsa \<br>  -v ~/.ssh/known_hosts:/root/.ssh/known_hosts \<br>  -v /var/run/docker.sock:/var/run/docker.sock \<br>  -v /etc/docker/daemon.json:/etc/docker/daemon.json \<br>  -v /usr/bin/docker:/usr/bin/docker \<br>  quay.io/kubespray/kubespray:v2.24.1 \<br>  /bin/bash<br>  <br> <span class="hljs-comment"># 避免小版本环境差异，礼貌性安装一下</span><br>$ pip install -r requirements.txt -i https://mirrors.aliyun.com/pypi/simple/<br><br></code></pre></td></tr></table></figure><h2 id="部署集群"><a href="#部署集群" class="headerlink" title="部署集群"></a><strong>部署集群</strong></h2><h3 id="服务器防火墙设置"><a href="#服务器防火墙设置" class="headerlink" title="服务器防火墙设置"></a><strong>服务器防火墙设置</strong></h3><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs clojure"><br>ansible -i inventory/mycluster/hosts.yaml all  -m systemd -a &#x27;name=firewalld state=stopped enabled=no&#x27;<br><br></code></pre></td></tr></table></figure><p><strong>开始部署集群</strong></p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs clojure"># 在线<br>$ ansible-playbook -i inventory/mycluster/hosts.yaml --become --become-user=root --private-key ~/.ssh/id_rsa cluster.yml<br># 离线<br>$ ansible-playbook -i inventory/my_airgap_cluster/hosts.yaml --become --become-user=root --private-key ~/.ssh/id_rsa cluster.yml<br><br></code></pre></td></tr></table></figure><p><strong>离线部署</strong></p><p>复制已经配置好的 <code>mycluster</code> 配置文件，删除其中的 <code>mirror.yml</code> 镜像加速配置</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs clojure">$ cp -r inventory/mycluster inventory/my_airgap_cluster<br>$ rm -f inventory/mycluster/group_vars/all/mirror.yml<br><br>$ sed -i &#x27;/&#123;&#123; files_repo/s/^# //&#x27; inventory/my_airgap_cluster/group_vars/all/offline.yml<br>$ sed -i &#x27;/&#123;&#123; registry_host/s/^# //&#x27; inventory/my_airgap_cluster/group_vars/all/offline.yml<br>$ tee -a inventory/my_airgap_cluster/group_vars/all/offline.yml &lt;&lt;EOF<br>files_repo: <span class="hljs-string">&quot;http://192.168.8.60:8080&quot;</span><br>registry_host: <span class="hljs-string">&quot;192.168.8.60:5000&quot;</span><br>EOF<br><br></code></pre></td></tr></table></figure><p><strong>本地服务器搭建</strong></p><h3 id="生成下载文件列表"><a href="#生成下载文件列表" class="headerlink" title="生成下载文件列表"></a><strong>生成下载文件列表</strong></h3><p>生成 文件列表 <code>files.list</code> 和 镜像列表 <code>images.list</code>，完成后退出容器</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs clojure">$ ./contrib/offline/generate_list.sh<br><br>验证文件<br>$ ls -l contrib/offline/temp/<br>总用量 <span class="hljs-number">16</span><br>-rw-r--r--. <span class="hljs-number">1</span> root root <span class="hljs-number">2000</span> <span class="hljs-number">3</span>月   <span class="hljs-number">2</span> <span class="hljs-number">16</span>:<span class="hljs-number">45</span> files.list<br>-rw-r--r--. <span class="hljs-number">1</span> root root <span class="hljs-number">2797</span> <span class="hljs-number">3</span>月   <span class="hljs-number">2</span> <span class="hljs-number">16</span>:<span class="hljs-number">45</span> files.list.template<br>-rw-r--r--. <span class="hljs-number">1</span> root root <span class="hljs-number">2408</span> <span class="hljs-number">3</span>月   <span class="hljs-number">2</span> <span class="hljs-number">16</span>:<span class="hljs-number">45</span> images.list<br>-rw-r--r--. <span class="hljs-number">1</span> root root <span class="hljs-number">3365</span> <span class="hljs-number">3</span>月   <span class="hljs-number">2</span> <span class="hljs-number">16</span>:<span class="hljs-number">45</span> images.list.template<br>如果配置了 daocloud 国内加速 ，文件列表 和 镜像列表 地址内容都应包含 daocloud 的地址<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>k8s</category>
      
      <category>kubeSpray</category>
      
      <category>ansible</category>
      
    </categories>
    
    
    <tags>
      
      <tag>k8s部署</tag>
      
      <tag>KubeSpray</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>K8S之集群容量</title>
    <link href="/2024/04/22/k8s%E4%B9%8B%E9%9B%86%E7%BE%A4%E5%AE%B9%E9%87%8F/"/>
    <url>/2024/04/22/k8s%E4%B9%8B%E9%9B%86%E7%BE%A4%E5%AE%B9%E9%87%8F/</url>
    
    <content type="html"><![CDATA[<h3 id="k8s之集群容量"><a href="#k8s之集群容量" class="headerlink" title="k8s之集群容量"></a>k8s之集群容量</h3><ul><li><p>1、K8S集群中，所有pod都应该设置request数值。否则资源利用率统计很不准。</p></li><li><p>2、资源不够的时候，没有设置request和limit的pod最先被驱逐，其次是request&lt;limit的pod被驱逐，最后是request=limit的pod被驱逐。</p></li><li><p>3、集群在使用中，有的资源允许压缩使用，有的不成。CPU、网络I/O可以；内存和磁盘空间不建议。但很多时候pod并不是同时使用，因此稍有有一些超额分配是可以的，可以在limitrange中的maxLimitRequestRatio设置百分比。当然，这个百分比要通过测试实现。也就是说，当资源不够的时候，pod会被驱逐，根据你能接受的驱逐pod的频率，设置评定当时的超分率。当然，超额使用的设置还和每个namespace的qouta的设置有关。从集群角度看，K8S整体的qouta可以大于整体的可提资源。</p></li><li><p>4、K8S节点会预留资源，主要分为两部分Kube-reserved, system-reserved。当资源利用率超过的可分配资源时（开始侵占预留资源），K8S开始驱逐内存。K8S驱逐pod的阈值可以设置，也就是说，当节点的资源少于多少的时候，开始驱逐pod。</p></li><li><p>5、容量规划主要是对比request资源和实际使用率。根据实际使用率的上浮下浮20%，我们设定资源的上限、下限预估值。低估造成资源不够，高估造成资源浪费。如果出现高估，可以减少request，limit不变，让request&lt; limit。如果出现了低估，那降低limit，让request=limit。</p></li><li><p>6、在集群规模的评估时，如果资源使用率超过80%，则建议增加K8S集群的节点。如果资源利用率低于40%，并且在公有云上，可以考虑缩减集群规模。但在私有云的生产环境则没有必要这样做。</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>k8s</category>
      
    </categories>
    
    
    <tags>
      
      <tag>K8S规划</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>K8S网络之coredns配置外部DNS转发</title>
    <link href="/2024/04/03/K8S%E7%BD%91%E7%BB%9C%E4%B9%8Bcoredns%E9%85%8D%E7%BD%AE%E5%A4%96%E9%83%A8DNS%E8%BD%AC%E5%8F%91/"/>
    <url>/2024/04/03/K8S%E7%BD%91%E7%BB%9C%E4%B9%8Bcoredns%E9%85%8D%E7%BD%AE%E5%A4%96%E9%83%A8DNS%E8%BD%AC%E5%8F%91/</url>
    
    <content type="html"><![CDATA[<h1 id="k8s网络之coredns配置外部DNS转发"><a href="#k8s网络之coredns配置外部DNS转发" class="headerlink" title="k8s网络之coredns配置外部DNS转发"></a>k8s网络之coredns配置外部DNS转发</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">kubectl edit configmap coredns -n kube-system<br></code></pre></td></tr></table></figure><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs clojure">Corefile: |<br>  .:<span class="hljs-number">53</span> &#123;<br>      errors<br>      health<br>      kubernetes cluster.local in-addr.arpa ip6.arpa &#123;<br>         pods insecure<br>         upstream<br>         fallthrough in-addr.arpa ip6.arpa<br>      &#125;<br>      prometheus :<span class="hljs-number">9153</span><br>      forward . /etc/resolv.conf<br>      cache <span class="hljs-number">30</span><br>      loop<br>      reload<br>      loadbalance<br>  &#125;<br>  hzcngb.com:<span class="hljs-number">53</span> &#123;<br>      errors<br>      cache <span class="hljs-number">30</span><br>      forward . <span class="hljs-number">172.16</span>.200.18<br>  &#125;<br></code></pre></td></tr></table></figure><ul><li>error: 错误记录到stdout</li><li><a href="https://coredns.io/plugins/health/">health</a> ：CoreDNS的运行状况报告为 <a href="http://localhost:8080/health">http：// localhost：8080 / health</a></li><li><a href="https://coredns.io/plugins/kubernetes/">kubernetes</a> ：CoreDNS将根据Kubernetes服务和pod的IP回复DNS查询</li><li><a href="https://coredns.io/plugins/prometheus/">prometheus</a> ：CoreDNS的度量标准可以在 <a href="http://localhost:9153/metrics">http://localhost:9153/</a> Prometheus格式的 <a href="https://prometheus.io/">指标</a> 中找到</li><li><a href="https://coredns.io/plugins/proxy/">proxy</a> ：任何不在Kubernetes集群域内的查询都将转发到预定义的解析器（/etc/resolv.conf）</li><li><a href="https://coredns.io/plugins/cache/">cache</a> ：启用前端缓存</li><li><a href="https://coredns.io/plugins/loop/">loop</a> ：检测简单的转发循环，如果找到循环则停止CoreDNS进程</li><li><a href="https://coredns.io/plugins/reload">reload</a> ：允许自动重新加载已更改的Corefile。编辑ConfigMap配置后，请等待两分钟以使更改生效</li><li><a href="https://coredns.io/plugins/loadbalance">loadbalance</a> ：这是一个循环DNS负载均衡器，可以在答案中随机化A，AAAA和MX记录的顺序</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 应用configmap到coredns</span><br>kubectl scale deployment coredns -n kube-system --replicas=0<br>kubectl scale deployment coredns -n kube-system --replicas=2<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>k8s</category>
      
    </categories>
    
    
    <tags>
      
      <tag>K8S网络</tag>
      
      <tag>dns</tag>
      
      <tag>nfs</tag>
      
      <tag>coredns</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>K8S集群网络之打通办公网络</title>
    <link href="/2024/04/03/K8S%E7%BD%91%E7%BB%9C%E4%B9%8B%E9%9B%86%E7%BE%A4%E7%BD%91%E7%BB%9C%E5%8A%9E%E5%85%AC%E7%BD%91%E7%BB%9C%E4%BA%92%E8%81%94/"/>
    <url>/2024/04/03/K8S%E7%BD%91%E7%BB%9C%E4%B9%8B%E9%9B%86%E7%BE%A4%E7%BD%91%E7%BB%9C%E5%8A%9E%E5%85%AC%E7%BD%91%E7%BB%9C%E4%BA%92%E8%81%94/</url>
    
    <content type="html"><![CDATA[<h1 id="K8S集群网络之打通办公网络"><a href="#K8S集群网络之打通办公网络" class="headerlink" title="K8S集群网络之打通办公网络"></a>K8S集群网络之打通办公网络</h1><p>办公区网段 192.168.10.0/23</p><p>测试服务器网段 192.168.0.0/24</p><p>K8S群集PODS网段 100.64.0.0/10</p><p>K8S SVC 网段10.96.0.0/12。</p><p>任意选择一台K8S node节点 IP：192.168.0.204/32</p><h3 id="服务器操作"><a href="#服务器操作" class="headerlink" title="服务器操作"></a>服务器操作</h3><p>开启内核转发</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/sysctl.conf<br>net.ipv4.ip_forward = 1<br>sysctl -p<br></code></pre></td></tr></table></figure><p>设置SNAT：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">iptables -t nat -A POSTROUTING -s 172.16.20.0/23 -d 100.64.0.0/10 -j MASQUERADE<br>iptables -t nat -A POSTROUTING -s 172.16.20.0/23 -d 10.96.0.0/12 -j MASQUERADE<br>iptables -t nat -A POSTROUTING -s 172.16.30.0/24 -d 100.64.0.0/10 -j MASQUERADE<br>iptables -t nat -A POSTROUTING -s 172.16.30.0/24 -d 10.96.0.0/12 -j MASQUERADE<br></code></pre></td></tr></table></figure><p>三层交换机上设置路由条目：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ sys<br>$ ip route-static 100.64.0.0 255.192.0.0 172.16.200.224<br>$ ip route-static 100.96.0.0 255.240.0.0 172.16.200.224<br></code></pre></td></tr></table></figure><p>iptables -t nat -A POSTROUTING -s 192.168.10.0/23 -d 100.64.0.0/10 -j MASQUERADE</p><p>192.168.0.204</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">iptables -t nat -A POSTROUTING -s <span class="hljs-number">192.168</span><span class="hljs-number">.10</span><span class="hljs-number">.0</span>/<span class="hljs-number">23</span> -d <span class="hljs-number">100.64</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>/<span class="hljs-number">10</span> -j MASQUERADE<br>iptables -t nat -A POSTROUTING -s <span class="hljs-number">192.168</span><span class="hljs-number">.10</span><span class="hljs-number">.0</span>/<span class="hljs-number">23</span> -d <span class="hljs-number">100.64</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>/<span class="hljs-number">10</span> -j MASQUERADE<br>iptables -t nat -A POSTROUTING -s <span class="hljs-number">192.168</span><span class="hljs-number">.10</span><span class="hljs-number">.0</span>/<span class="hljs-number">23</span> -d <span class="hljs-number">10.96</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>/<span class="hljs-number">12</span> -j MASQUERADE<br>iptables-save<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>k8s</category>
      
    </categories>
    
    
    <tags>
      
      <tag>K8S网络</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>K8S存储之动态PVC+StorageClass+NFS</title>
    <link href="/2024/04/03/k8s%E5%AD%98%E5%82%A8%E4%B9%8B%E5%8A%A8%E6%80%81PVC-StorageClass-NFS/"/>
    <url>/2024/04/03/k8s%E5%AD%98%E5%82%A8%E4%B9%8B%E5%8A%A8%E6%80%81PVC-StorageClass-NFS/</url>
    
    <content type="html"><![CDATA[<h1 id="k8s存储之动态PVC-StorageClass-NFS"><a href="#k8s存储之动态PVC-StorageClass-NFS" class="headerlink" title="k8s存储之动态PVC+StorageClass+NFS"></a>k8s存储之动态PVC+StorageClass+NFS</h1><h3 id="动态pvc-StorageClass-NFS"><a href="#动态pvc-StorageClass-NFS" class="headerlink" title="动态pvc StorageClass+NFS"></a><strong><a href="https://www.cnblogs.com/lidong94/p/14518362.html">动态pvc StorageClass+NFS</a></strong></h3><p><strong>StorageClass</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">要使用 StorageClass，我们就得安装对应的自动配置程序，比如我们这里存储后端使用的是 nfs，那么我们就需要使用到一个 nfs-client 的自动配置程序，我们也叫它 Provisioner，这个程序使用我们已经配置好的 nfs 服务器，来自动创建持久卷，也就是自动帮我们创建 PV。<br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">1</span>.自动创建的PV以<span class="hljs-variable">$&#123;namespace&#125;</span>-<span class="hljs-variable">$&#123;pvcName&#125;</span>-<span class="hljs-variable">$&#123;pvName&#125;</span>这样的命名格式创建在NFS服务器上的共享数据目录中<br><span class="hljs-attribute">2</span>.而当这个PV被回收后会以archieved-<span class="hljs-variable">$&#123;namespace&#125;</span>-<span class="hljs-variable">$&#123;pvcName&#125;</span>-<span class="hljs-variable">$&#123;pvName&#125;</span>这样的命名格式存在 NFS 服务器上。<br></code></pre></td></tr></table></figure><p>一、<strong>创建StorageClass</strong></p><p>确保当前有<strong>NFS server及共享目录信息</strong></p><p><strong>rbac.yaml</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs python">apiVersion: v1<br>kind: ServiceAccount<br>metadata:<br>  name: nfs-client-provisioner<br>  namespace: default<br>---<br>kind: ClusterRole<br>apiVersion: rbac.authorization.k8s.io/v1<br>metadata:<br>  name: nfs-client-provisioner-runner<br>rules:<br>  - apiGroups: [<span class="hljs-string">&quot;&quot;</span>]<br>    resources: [<span class="hljs-string">&quot;persistentvolumes&quot;</span>]<br>    verbs: [<span class="hljs-string">&quot;get&quot;</span>, <span class="hljs-string">&quot;list&quot;</span>, <span class="hljs-string">&quot;watch&quot;</span>, <span class="hljs-string">&quot;create&quot;</span>, <span class="hljs-string">&quot;delete&quot;</span>]<br>  - apiGroups: [<span class="hljs-string">&quot;&quot;</span>]<br>    resources: [<span class="hljs-string">&quot;persistentvolumeclaims&quot;</span>]<br>    verbs: [<span class="hljs-string">&quot;get&quot;</span>, <span class="hljs-string">&quot;list&quot;</span>, <span class="hljs-string">&quot;watch&quot;</span>, <span class="hljs-string">&quot;update&quot;</span>]<br>  - apiGroups: [<span class="hljs-string">&quot;storage.k8s.io&quot;</span>]<br>    resources: [<span class="hljs-string">&quot;storageclasses&quot;</span>]<br>    verbs: [<span class="hljs-string">&quot;get&quot;</span>, <span class="hljs-string">&quot;list&quot;</span>, <span class="hljs-string">&quot;watch&quot;</span>]<br>  - apiGroups: [<span class="hljs-string">&quot;&quot;</span>]<br>    resources: [<span class="hljs-string">&quot;events&quot;</span>]<br>    verbs: [<span class="hljs-string">&quot;create&quot;</span>, <span class="hljs-string">&quot;update&quot;</span>, <span class="hljs-string">&quot;patch&quot;</span>]<br>---<br>kind: ClusterRoleBinding<br>apiVersion: rbac.authorization.k8s.io/v1<br>metadata:<br>  name: run-nfs-client-provisioner<br>subjects:<br>  - kind: ServiceAccount<br>    name: nfs-client-provisioner<br>    namespace: default<br>roleRef:<br>  kind: ClusterRole<br>  name: nfs-client-provisioner-runner<br>  apiGroup: rbac.authorization.k8s.io<br>---<br>kind: Role<br>apiVersion: rbac.authorization.k8s.io/v1<br>metadata:<br>  name: leader-locking-nfs-client-provisioner<br>  namespace: default<br>rules:<br>  - apiGroups: [<span class="hljs-string">&quot;&quot;</span>]<br>    resources: [<span class="hljs-string">&quot;endpoints&quot;</span>]<br>    verbs: [<span class="hljs-string">&quot;get&quot;</span>, <span class="hljs-string">&quot;list&quot;</span>, <span class="hljs-string">&quot;watch&quot;</span>, <span class="hljs-string">&quot;create&quot;</span>, <span class="hljs-string">&quot;update&quot;</span>, <span class="hljs-string">&quot;patch&quot;</span>]<br>---<br>kind: RoleBinding<br>apiVersion: rbac.authorization.k8s.io/v1<br>metadata:<br>  name: leader-locking-nfs-client-provisioner<br>subjects:<br>  - kind: ServiceAccount<br>    name: nfs-client-provisioner<br>    namespace: default<br>roleRef:<br>  kind: Role<br>  name: leader-locking-nfs-client-provisioner<br>  apiGroup: rbac.authorization.k8s.io<br></code></pre></td></tr></table></figure><p><strong>nfs-StorageClass.yaml</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python">apiVersion: storage.k8s.io/v1<br>kind: StorageClass<br>metadata:<br>  name: managed-nfs-storage<br>  annotations:<br>    storageclass.kubernetes.io/<span class="hljs-keyword">is</span>-default-<span class="hljs-keyword">class</span>: <span class="hljs-string">&quot;true&quot;</span><br>provisioner: nfs-storage <br>parameters: <br>  archiveOnDelete: <span class="hljs-string">&quot;false&quot;</span><br><br><span class="hljs-comment">#这里的名称要和provisioner配置文件中的环境变量PROVISIONER_NAME保持一致</span><br></code></pre></td></tr></table></figure><p><strong>nfs-provisioner.yaml</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs python">apiVersion: apps/v1<br>kind: Deployment<br>metadata:<br>  name: nfs-client-provisioner<br>  labels:<br>    app: nfs-client-provisioner<br>  namespace: default<br>spec:<br>  replicas: <span class="hljs-number">1</span><br>  selector:<br>    matchLabels:<br>      app: nfs-client-provisioner<br>  strategy:<br>    <span class="hljs-built_in">type</span>: Recreate<br>  selector:<br>    matchLabels:<br>      app: nfs-client-provisioner<br>  template:<br>    metadata:<br>      labels:<br>        app: nfs-client-provisioner<br>    spec:<br>      serviceAccountName: nfs-client-provisioner<br>      containers:<br>        - name: nfs-client-provisioner<br>          image: quay.io/external_storage/nfs-client-provisioner:latest<br>          volumeMounts:<br>            - name: nfs-client-root<br>              mountPath: /persistentvolumes<br>          env:<br>            - name: PROVISIONER_NAME<br>              value: nfs-storage<br>            - name: NFS_SERVER<br>              value: <span class="hljs-number">192.168</span><span class="hljs-number">.0</span><span class="hljs-number">.213</span><br>            - name: NFS_PATH  <br>              value: /data/nfs<br>      volumes:<br>        - name: nfs-client-root<br>          nfs:<br>            server: <span class="hljs-number">192.168</span><span class="hljs-number">.0</span><span class="hljs-number">.213</span><br>            path: /data/nfs<br></code></pre></td></tr></table></figure><h3 id="配置默认sc"><a href="#配置默认sc" class="headerlink" title="配置默认sc"></a>配置默认sc</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">DEFAULT_STORAGE_CLASS=$(kubectl get storageclass -o=jsonpath=<span class="hljs-string">&#x27;&#123;.items[?(@.metadata.annotations.storageclass\.kubernetes\.io/is-default-class==&quot;true&quot;)].metadata.name&#125;&#x27;</span>)<br>kubectl patch storageclass <span class="hljs-string">&quot;$DEFAULT_STORAGE_CLASS&quot;</span> -p <span class="hljs-string">&#x27;&#123;&quot;allowVolumeExpansion&quot;: true&#125;&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="修改注解"><a href="#修改注解" class="headerlink" title="修改注解"></a>修改注解</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">kubectl patch storageclass $DEFAULT_STORAGE_CLASS<span class="hljs-string">&quot; -p &#x27;&#123;&quot;</span>metadata<span class="hljs-string">&quot;: &#123;&quot;</span>annotations<span class="hljs-string">&quot;:&#123;&quot;</span>storageclass.kubernetes.io/<span class="hljs-keyword">is</span>-default-<span class="hljs-keyword">class</span><span class="hljs-string">&quot;:&quot;</span>true<span class="hljs-string">&quot;&#125;&#125;&#125;&#x27;</span><br><span class="hljs-string"></span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>k8s</category>
      
    </categories>
    
    
    <tags>
      
      <tag>nfs</tag>
      
      <tag>k8s存储</tag>
      
      <tag>pvc</tag>
      
      <tag>StorageClass</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>kubevsphere之ks平台部署</title>
    <link href="/2024/03/05/kubevsphere-k8s%E5%B9%B3%E5%8F%B0%E9%83%A8%E7%BD%B2/"/>
    <url>/2024/03/05/kubevsphere-k8s%E5%B9%B3%E5%8F%B0%E9%83%A8%E7%BD%B2/</url>
    
    <content type="html"><![CDATA[<h2 id="kubevsphere-k8s平台部署"><a href="#kubevsphere-k8s平台部署" class="headerlink" title="kubevsphere-k8s平台部署"></a>kubevsphere-k8s平台部署</h2><h3 id="1-环境"><a href="#1-环境" class="headerlink" title="1.环境"></a>1.环境</h3><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig">每台服务器执行命令<br><span class="hljs-string">hostnamectl</span> <span class="hljs-built_in">set-hostname</span> <span class="hljs-string">k8smaster</span><br><span class="hljs-string">hostnamectl</span> <span class="hljs-built_in">set-hostname</span> <span class="hljs-string">k8snode1</span><br><span class="hljs-string">hostnamectl</span> <span class="hljs-built_in">set-hostname</span> <span class="hljs-string">k8snode2</span><br><br><span class="hljs-comment"># 将 SELinux 设置为 permissive 模式（相当于将其禁用）</span><br><span class="hljs-string">sudo</span> <span class="hljs-string">setenforce</span> <span class="hljs-string">0</span><br><span class="hljs-string">sudo</span> <span class="hljs-string">sed</span> -<span class="hljs-string">i</span> <span class="hljs-string">&#x27;s/^SELINUX=enforcing$/SELINUX=permissive/&#x27;</span> /<span class="hljs-string">etc</span>/<span class="hljs-string">selinux</span>/<span class="hljs-string">config</span><br><span class="hljs-comment">#关闭swap</span><br><span class="hljs-string">swapoff</span> -<span class="hljs-string">a</span>  <br><span class="hljs-string">sed</span> -<span class="hljs-string">ri</span> <span class="hljs-string">&#x27;s/.*swap.*/#&amp;/&#x27;</span> /<span class="hljs-string">etc</span>/<span class="hljs-string">fstab</span><br><br><span class="hljs-comment">#允许 iptables 检查桥接流量</span><br><span class="hljs-string">cat</span> &lt;&lt;<span class="hljs-string">EOF</span> | <span class="hljs-string">sudo</span> <span class="hljs-string">tee</span> /<span class="hljs-string">etc</span>/<span class="hljs-string">modules-load</span>.<span class="hljs-string">d</span>/<span class="hljs-string">k8s</span>.<span class="hljs-string">conf</span><br><span class="hljs-string">br_netfilter</span><br><span class="hljs-string">EOF</span><br><br><span class="hljs-string">cat</span> &lt;&lt;<span class="hljs-string">EOF</span> | <span class="hljs-string">sudo</span> <span class="hljs-string">tee</span> /<span class="hljs-string">etc</span>/<span class="hljs-string">sysctl</span>.<span class="hljs-string">d</span>/<span class="hljs-string">k8s</span>.<span class="hljs-string">conf</span><br><span class="hljs-string">net</span>.<span class="hljs-string">bridge</span>.<span class="hljs-string">bridge-nf-call-ip6tables</span> = <span class="hljs-string">1</span><br><span class="hljs-string">net</span>.<span class="hljs-string">bridge</span>.<span class="hljs-string">bridge-nf-call-iptables</span> = <span class="hljs-string">1</span><br><span class="hljs-string">EOF</span><br><span class="hljs-string">sudo</span> <span class="hljs-string">sysctl</span> <span class="hljs-built_in">--system</span><br><br><span class="hljs-comment">#安装依赖（三台）</span><br><span class="hljs-string">yum</span> <span class="hljs-string">install</span> -<span class="hljs-string">y</span> <span class="hljs-string">conntrack</span><br><span class="hljs-string">yum</span> <span class="hljs-string">install</span> -<span class="hljs-string">y</span> <span class="hljs-string">socat</span><br></code></pre></td></tr></table></figure><h3 id="安装docker（所有节点）"><a href="#安装docker（所有节点）" class="headerlink" title="安装docker（所有节点）"></a>安装docker（所有节点）</h3><p>2.安装k8s</p><h4 id="1、下载KubeKey"><a href="#1、下载KubeKey" class="headerlink" title="1、下载KubeKey"></a>1、下载KubeKey</h4><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig">在<span class="hljs-string">master</span>节点执行 <br><span class="hljs-string">export</span> <span class="hljs-string">KKZONE</span>=<span class="hljs-string">cn</span> <br><span class="hljs-string">curl</span> -<span class="hljs-string">sfL</span> <span class="hljs-string">https</span>://<span class="hljs-built_in">get-kk.kubesphere.io</span> | <span class="hljs-string">VERSION</span>=<span class="hljs-string">v1</span>.<span class="hljs-string">1</span>.<span class="hljs-string">1</span> <span class="hljs-string">sh</span> - <br><span class="hljs-string">chmod</span> +<span class="hljs-string">x</span> <span class="hljs-string">kk</span><br></code></pre></td></tr></table></figure><h4 id="2、创建集群配置文件"><a href="#2、创建集群配置文件" class="headerlink" title="2、创建集群配置文件"></a>2、创建集群配置文件</h4><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-string">./kk</span> create config <span class="hljs-params">--with-kubernetes</span> v1.20.4 <span class="hljs-params">--with-kubesphere</span> v3.1.1 <br><span class="hljs-comment">#更改config-sample.yaml配置</span><br></code></pre></td></tr></table></figure><h4 id="3、创建集群"><a href="#3、创建集群" class="headerlink" title="3、创建集群"></a>3、创建集群</h4><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lua">./kk <span class="hljs-built_in">create</span> cluster -f <span class="hljs-built_in">config</span>-sample.yaml<br></code></pre></td></tr></table></figure><h4 id="4、查看进度"><a href="#4、查看进度" class="headerlink" title="4、查看进度"></a>4、查看进度</h4><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">kubectl logs -n kubesphere-system <span class="hljs-constructor">$(<span class="hljs-params">kubectl</span> <span class="hljs-params">get</span> <span class="hljs-params">pod</span> -<span class="hljs-params">n</span> <span class="hljs-params">kubesphere</span>-<span class="hljs-params">system</span> -<span class="hljs-params">l</span> <span class="hljs-params">app</span>=<span class="hljs-params">ks</span>-<span class="hljs-params">install</span> -<span class="hljs-params">o</span> <span class="hljs-params">jsonpath</span>=&#x27;&#123;.<span class="hljs-params">items</span>[0].<span class="hljs-params">metadata</span>.<span class="hljs-params">name</span>&#125;&#x27;)</span> -f<br></code></pre></td></tr></table></figure><h3 id="安装完成"><a href="#安装完成" class="headerlink" title="安装完成"></a>安装完成</h3><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs clean">Collecting installation results ...<br>#####################################################<br>###              Welcome to KubeSphere!           ###<br>#####################################################<br><br>Console: http:<span class="hljs-comment">//192.168.4.51:30880</span><br>Account: admin<br>Password: P@<span class="hljs-number">88</span>w0rd<br><br>NOTES：<br>  <span class="hljs-number">1.</span> After you log into the console, please check the<br>     monitoring status <span class="hljs-keyword">of</span> service components <span class="hljs-keyword">in</span><br>     <span class="hljs-string">&quot;Cluster Management&quot;</span>. If any service is not<br>     ready, please wait patiently until all components<br>     are up and running.<br>  <span class="hljs-number">2.</span> Please change the default password after login.<br><br>#####################################################<br>https:<span class="hljs-comment">//kubesphere.io             2023-04-18 15:25:22</span><br>#####################################################<br></code></pre></td></tr></table></figure><h3 id="新增节点"><a href="#新增节点" class="headerlink" title="新增节点"></a>新增节点</h3><h4 id="1-修改ks配置文件-新增节点4"><a href="#1-修改ks配置文件-新增节点4" class="headerlink" title="1.修改ks配置文件(新增节点4)"></a>1.修改ks配置文件(新增节点4)</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">kubekey.kubesphere.io/v1alpha1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Cluster</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">sample</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">hosts:</span><br>  <span class="hljs-bullet">-</span> &#123;<span class="hljs-attr">name:</span> <span class="hljs-string">master</span>, <span class="hljs-attr">address:</span> <span class="hljs-number">192.168</span><span class="hljs-number">.2</span><span class="hljs-number">.51</span>, <span class="hljs-attr">internalAddress:</span> <span class="hljs-number">192.168</span><span class="hljs-number">.2</span><span class="hljs-number">.51</span>, <span class="hljs-attr">user:</span> <span class="hljs-string">root</span>, <span class="hljs-attr">password:</span> <span class="hljs-number">123</span>&#125;<br>  <span class="hljs-bullet">-</span> &#123;<span class="hljs-attr">name:</span> <span class="hljs-string">master1</span>, <span class="hljs-attr">address:</span> <span class="hljs-number">192.168</span><span class="hljs-number">.2</span><span class="hljs-number">.61</span>, <span class="hljs-attr">internalAddress:</span> <span class="hljs-number">192.168</span><span class="hljs-number">.2</span><span class="hljs-number">.61</span>, <span class="hljs-attr">user:</span> <span class="hljs-string">root</span>, <span class="hljs-attr">password:</span> <span class="hljs-number">123</span>&#125;<br>  <span class="hljs-bullet">-</span> &#123;<span class="hljs-attr">name:</span> <span class="hljs-string">master2</span>, <span class="hljs-attr">address:</span> <span class="hljs-number">192.168</span><span class="hljs-number">.2</span><span class="hljs-number">.62</span>, <span class="hljs-attr">internalAddress:</span> <span class="hljs-number">192.168</span><span class="hljs-number">.2</span><span class="hljs-number">.62</span>, <span class="hljs-attr">user:</span> <span class="hljs-string">root</span>, <span class="hljs-attr">password:</span> <span class="hljs-number">123</span>&#125;<br>  <span class="hljs-bullet">-</span> &#123;<span class="hljs-attr">name:</span> <span class="hljs-string">node3</span>, <span class="hljs-attr">address:</span> <span class="hljs-number">192.168</span><span class="hljs-number">.2</span><span class="hljs-number">.64</span>, <span class="hljs-attr">internalAddress:</span> <span class="hljs-number">192.168</span><span class="hljs-number">.2</span><span class="hljs-number">.64</span>, <span class="hljs-attr">user:</span> <span class="hljs-string">root</span>, <span class="hljs-attr">password:</span> <span class="hljs-number">123</span>&#125;<br>  <span class="hljs-bullet">-</span> &#123;<span class="hljs-attr">name:</span> <span class="hljs-string">node4</span>, <span class="hljs-attr">address:</span> <span class="hljs-number">192.168</span><span class="hljs-number">.2</span><span class="hljs-number">.65</span>, <span class="hljs-attr">internalAddress:</span> <span class="hljs-number">192.168</span><span class="hljs-number">.2</span><span class="hljs-number">.65</span>, <span class="hljs-attr">user:</span> <span class="hljs-string">root</span>, <span class="hljs-attr">password:</span> <span class="hljs-number">123</span>&#125;<br>  <span class="hljs-attr">roleGroups:</span><br>    <span class="hljs-attr">etcd:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">master</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">master1</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">master2</span><br>    <span class="hljs-attr">master:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">master</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">master1</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">master2</span><br>    <span class="hljs-attr">worker:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">node3</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">node4</span><br>  <span class="hljs-attr">controlPlaneEndpoint:</span><br>    <span class="hljs-comment"># If loadbalancer was used, &#x27;address&#x27; should be set to loadbalancer&#x27;s ip.</span><br>    <span class="hljs-attr">domain:</span> <span class="hljs-string">lb.kubesphere.local</span><br>    <span class="hljs-attr">address:</span> <span class="hljs-string">&quot;192.168.4.51&quot;</span><br>    <span class="hljs-attr">port:</span> <span class="hljs-number">6443</span><br>  <span class="hljs-attr">kubernetes:</span><br>    <span class="hljs-attr">version:</span> <span class="hljs-string">v1.20.4</span><br>    <span class="hljs-attr">clusterName:</span> <span class="hljs-string">cluster.local</span><br>    <span class="hljs-attr">proxyMode:</span> <span class="hljs-string">ipvs</span><br>    <span class="hljs-attr">masqueradeAll:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">maxPods:</span> <span class="hljs-number">110</span><br>    <span class="hljs-attr">nodeCidrMaskSize:</span> <span class="hljs-number">24</span><br>  <span class="hljs-attr">network:</span><br>    <span class="hljs-attr">plugin:</span> <span class="hljs-string">calico</span><br>    <span class="hljs-attr">kubePodsCIDR:</span> <span class="hljs-number">10.233</span><span class="hljs-number">.64</span><span class="hljs-number">.0</span><span class="hljs-string">/18</span><br>    <span class="hljs-attr">kubeServiceCIDR:</span> <span class="hljs-number">10.233</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span><span class="hljs-string">/18</span><br>  <span class="hljs-attr">registry:</span><br>    <span class="hljs-attr">privateRegistry:</span> <span class="hljs-string">&quot;&quot;</span><br></code></pre></td></tr></table></figure><p>2、执行升级命令</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">./kk <span class="hljs-built_in">add</span> nodes -f sample.yaml<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>k8s</category>
      
    </categories>
    
    
    <tags>
      
      <tag>k8s升级</tag>
      
      <tag>kubevsphere</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>kubevsphere之k8s版本升级</title>
    <link href="/2024/03/05/kubevsphere-k8s%E7%89%88%E6%9C%AC%E5%8D%87%E7%BA%A7/"/>
    <url>/2024/03/05/kubevsphere-k8s%E7%89%88%E6%9C%AC%E5%8D%87%E7%BA%A7/</url>
    
    <content type="html"><![CDATA[<h2 id="当前版本："><a href="#当前版本：" class="headerlink" title="当前版本："></a>当前版本：</h2><ul><li>k8s版本：1.23.14</li><li>ks版本：v3.3.1 </li></ul><h2 id="k8s-1-23-14升级至1-24-17"><a href="#k8s-1-23-14升级至1-24-17" class="headerlink" title="k8s-1.23.14升级至1.24.17"></a>k8s-1.23.14升级至1.24.17</h2><ul><li>k8s-v1.23.14升级至v.1.24.17</li><li>dockershim 迁移到 cri-dockerd</li></ul><h2 id="升级步骤"><a href="#升级步骤" class="headerlink" title="升级步骤"></a>升级步骤</h2><h4 id="1、下载最新kk二进制文件"><a href="#1、下载最新kk二进制文件" class="headerlink" title="1、下载最新kk二进制文件"></a>1、下载最新kk二进制文件</h4><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">wget</span> https://github.com/kubesphere/kubekey/releases/download/v3.<span class="hljs-number">1</span>.<span class="hljs-number">0</span>-rc.<span class="hljs-number">0</span>/kubekey-v3.<span class="hljs-number">1</span>.<span class="hljs-number">0</span>-rc.<span class="hljs-number">0</span>-linux-amd64.tar.gz &amp;&amp; tar zxvf kubekey-v3.<span class="hljs-number">1</span>.<span class="hljs-number">0</span>-rc.<span class="hljs-number">0</span>-linux-amd64.tar.gz<br></code></pre></td></tr></table></figure><h4 id="2、删除kubelet-config-1-2X的configmap里面的featuregate-TTL参数"><a href="#2、删除kubelet-config-1-2X的configmap里面的featuregate-TTL参数" class="headerlink" title="2、删除kubelet-config-1.2X的configmap里面的featuregate TTL参数"></a>2、删除kubelet-config-1.2X的configmap里面的featuregate TTL参数</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs awk">kubectl -n kube-system edit cm kubelet-config-<span class="hljs-number">1.23</span> <br>删除featuregate下的TTL...<br> <br>&amp;&amp;<br><br>vim <span class="hljs-regexp">/etc/</span>kubernetes<span class="hljs-regexp">/manifests/</span>kube-apiserver.yaml<br>删除TTL参数<br></code></pre></td></tr></table></figure><h4 id="3、升级到1-24"><a href="#3、升级到1-24" class="headerlink" title="3、升级到1.24"></a>3、升级到1.24</h4><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-string">./kk</span> upgrade -f config-sample.yaml <span class="hljs-params">--with-kubernetes</span> v1.24.17 <br></code></pre></td></tr></table></figure><h4 id="4、执行升级后脚本无反应则手动重启kubelet"><a href="#4、执行升级后脚本无反应则手动重启kubelet" class="headerlink" title="4、执行升级后脚本无反应则手动重启kubelet"></a>4、执行升级后脚本无反应则手动重启kubelet</h4><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">systemctl restart kubelet</span> <br></code></pre></td></tr></table></figure><h4 id="5、完成，检查升级结果"><a href="#5、完成，检查升级结果" class="headerlink" title="5、完成，检查升级结果"></a>5、完成，检查升级结果</h4><ul><li>kubelet get node（查看node version）</li><li>查看env是否更新<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/var/</span>lib<span class="hljs-regexp">/kubelet/</span>kubeadm-flags.env<br></code></pre></td></tr></table></figure></li><li>kubectl edit node node1 （手动更新node-cri-socket注解）<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">kubectl patch <span class="hljs-keyword">node</span> <span class="hljs-title">&lt;NODE_NAME</span>&gt; -p &#x27;&#123;<span class="hljs-string">&quot;metadata&quot;</span>: &#123;<span class="hljs-string">&quot;annotations&quot;</span>: &#123;<span class="hljs-string">&quot;kubeadm.alpha.kubernetes.io/cri-socket&quot;</span>: <span class="hljs-string">&quot;unix:///var/run/cri-dockerd.sock&quot;</span>&#125;&#125;&#125;&#x27;<br></code></pre></td></tr></table></figure></li><li>kubectl version –short=true</li></ul><h2 id="k8s-1-24-17升级至1-25-16-需升级ks版本3-4-1，否则ks-api不兼容"><a href="#k8s-1-24-17升级至1-25-16-需升级ks版本3-4-1，否则ks-api不兼容" class="headerlink" title="k8s-1.24.17升级至1.25.16 (需升级ks版本3.4.1，否则ks-api不兼容)"></a>k8s-1.24.17升级至1.25.16 (需升级ks版本3.4.1，否则ks-api不兼容)</h2><h4 id="1、升级命令"><a href="#1、升级命令" class="headerlink" title="1、升级命令"></a>1、升级命令</h4><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-string">./kk</span> upgrade -f config-sample.yaml <span class="hljs-params">--with-kubernetes</span> v1.25.16 <br></code></pre></td></tr></table></figure><h4 id="2、重启kubelet"><a href="#2、重启kubelet" class="headerlink" title="2、重启kubelet"></a>2、重启kubelet</h4><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs maxima">systemctl <span class="hljs-built_in">restart</span> kubelet <br>执行升级后脚本无反应则手动重启各个节点kubelet<br></code></pre></td></tr></table></figure><h4 id="3、验证"><a href="#3、验证" class="headerlink" title="3、验证"></a>3、验证</h4><h2 id="k8s-1-25-16升级至1-26-16（同上）"><a href="#k8s-1-25-16升级至1-26-16（同上）" class="headerlink" title="k8s-1.25.16升级至1.26.16（同上）"></a>k8s-1.25.16升级至1.26.16（同上）</h2><h2 id="ks-kubesphere平台版本升级-3-3-1-gt-3-4-1"><a href="#ks-kubesphere平台版本升级-3-3-1-gt-3-4-1" class="headerlink" title="ks-kubesphere平台版本升级(3.3.1&gt;3.4.1)"></a>ks-kubesphere平台版本升级(3.3.1&gt;3.4.1)</h2><h4 id="当前版本：-1"><a href="#当前版本：-1" class="headerlink" title="当前版本："></a>当前版本：</h4><ul><li>k8s版本：1.24.17</li><li>kubesphere版本：v3.3.1 <figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs lua">升级ks版本 （修改<span class="hljs-built_in">config</span>-sample.yaml k8s版本为当前集群版本<span class="hljs-number">1.26</span><span class="hljs-number">.5</span>）<br>./kk upgrade -f <span class="hljs-built_in">config</span>-sample.yaml <span class="hljs-comment">--with-kubesphere v3.4.1</span><br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <categories>
      
      <category>k8s</category>
      
    </categories>
    
    
    <tags>
      
      <tag>k8s</tag>
      
      <tag>k8s升级</tag>
      
      <tag>kubevsphere</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>面试初探-1</title>
    <link href="/2024/02/28/%E9%9D%A2%E8%AF%95%E5%88%9D%E6%8E%A2-1/"/>
    <url>/2024/02/28/%E9%9D%A2%E8%AF%95%E5%88%9D%E6%8E%A2-1/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><pre><code class="hljs">两年了，心情躁动，虽然大行情不太好，还是忍不住想出来看看，刷新了简历，boss正好有hr主动来约了面试</code></pre><h2 id="面试过程"><a href="#面试过程" class="headerlink" title="面试过程"></a>面试过程</h2><h3 id="1-自我介绍"><a href="#1-自我介绍" class="headerlink" title="1.自我介绍"></a>1.自我介绍</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">巴拉巴拉巴拉<br></code></pre></td></tr></table></figure><h3 id="2-问运维的服务器数量，平常做哪些系统运维的工作"><a href="#2-问运维的服务器数量，平常做哪些系统运维的工作" class="headerlink" title="2.问运维的服务器数量，平常做哪些系统运维的工作"></a>2.问运维的服务器数量，平常做哪些系统运维的工作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$<br></code></pre></td></tr></table></figure><h3 id="3-有没有做过k8s升级-怎么升级的"><a href="#3-有没有做过k8s升级-怎么升级的" class="headerlink" title="3.有没有做过k8s升级,怎么升级的"></a>3.有没有做过k8s升级,怎么升级的</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <br></code></pre></td></tr></table></figure><h3 id="4-简述下POD的运行过程"><a href="#4-简述下POD的运行过程" class="headerlink" title="4.简述下POD的运行过程"></a>4.简述下POD的运行过程</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <br></code></pre></td></tr></table></figure><h3 id="5-贵公司集群数量，关于流量是怎么做的，东西向，南北向流程。"><a href="#5-贵公司集群数量，关于流量是怎么做的，东西向，南北向流程。" class="headerlink" title="5.贵公司集群数量，关于流量是怎么做的，东西向，南北向流程。"></a>5.贵公司集群数量，关于流量是怎么做的，东西向，南北向流程。</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <br></code></pre></td></tr></table></figure><h3 id="5-贵公司cicd情况介绍"><a href="#5-贵公司cicd情况介绍" class="headerlink" title="5.贵公司cicd情况介绍"></a>5.贵公司cicd情况介绍</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <br></code></pre></td></tr></table></figure><h3 id="6-熟悉哪些开发语言，你一般用哪些语言二开"><a href="#6-熟悉哪些开发语言，你一般用哪些语言二开" class="headerlink" title="6.熟悉哪些开发语言，你一般用哪些语言二开"></a>6.熟悉哪些开发语言，你一般用哪些语言二开</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <br></code></pre></td></tr></table></figure><h3 id="7-有没有接触过k8s二次开发"><a href="#7-有没有接触过k8s二次开发" class="headerlink" title="7.有没有接触过k8s二次开发"></a>7.有没有接触过k8s二次开发</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <br></code></pre></td></tr></table></figure><h3 id="8-介绍下k8s架构的优化，你是怎么做的"><a href="#8-介绍下k8s架构的优化，你是怎么做的" class="headerlink" title="8.介绍下k8s架构的优化，你是怎么做的"></a>8.介绍下k8s架构的优化，你是怎么做的</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <br></code></pre></td></tr></table></figure><h3 id="9-部署k8s前，有没有一些内核的优化，包括哪些"><a href="#9-部署k8s前，有没有一些内核的优化，包括哪些" class="headerlink" title="9.部署k8s前，有没有一些内核的优化，包括哪些"></a>9.部署k8s前，有没有一些内核的优化，包括哪些</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <br></code></pre></td></tr></table></figure><h3 id="10-python-列表和元组的区别，介绍下你常用的数据类型"><a href="#10-python-列表和元组的区别，介绍下你常用的数据类型" class="headerlink" title="10.python 列表和元组的区别，介绍下你常用的数据类型"></a>10.python 列表和元组的区别，介绍下你常用的数据类型</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <br></code></pre></td></tr></table></figure><h3 id="11-日志你们是怎么做的，有没有es维护经验"><a href="#11-日志你们是怎么做的，有没有es维护经验" class="headerlink" title="11. 日志你们是怎么做的，有没有es维护经验"></a>11. 日志你们是怎么做的，有没有es维护经验</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <br></code></pre></td></tr></table></figure><h3 id="12-有没有用到k8s-dashboard"><a href="#12-有没有用到k8s-dashboard" class="headerlink" title="12. 有没有用到k8s dashboard"></a>12. 有没有用到k8s dashboard</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <br></code></pre></td></tr></table></figure><h3 id="13-看你简历有写到ansible，对于ansible了解多少，用过哪些模块"><a href="#13-看你简历有写到ansible，对于ansible了解多少，用过哪些模块" class="headerlink" title="13. 看你简历有写到ansible，对于ansible了解多少，用过哪些模块"></a>13. 看你简历有写到ansible，对于ansible了解多少，用过哪些模块</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <br></code></pre></td></tr></table></figure><h3 id="14-对于ansible了解多少，用过哪些模块"><a href="#14-对于ansible了解多少，用过哪些模块" class="headerlink" title="14. 对于ansible了解多少，用过哪些模块"></a>14. 对于ansible了解多少，用过哪些模块</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <br></code></pre></td></tr></table></figure><h3 id="15-未完待更新"><a href="#15-未完待更新" class="headerlink" title="15. 未完待更新"></a>15. 未完待更新</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>面试</category>
      
    </categories>
    
    
    <tags>
      
      <tag>面试经验</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>路过人间</title>
    <link href="/2024/02/28/%E8%B7%AF%E8%BF%87%E4%BA%BA%E9%97%B4/"/>
    <url>/2024/02/28/%E8%B7%AF%E8%BF%87%E4%BA%BA%E9%97%B4/</url>
    
    <content type="html"><![CDATA[<h3 id="世上唯一不变，是人的善变"><a href="#世上唯一不变，是人的善变" class="headerlink" title="世上唯一不变，是人的善变"></a>世上唯一不变，是人的善变</h3><p>“我们永远不要在自己所看重的事情上投入不切实际的期待，附加不着边际的价值。因为人和事的有限性根本无法承受我们对无限希望的期待，否则人迟早会失望，人只能做自己能力范围内的事情，你要接受这个事实，并且以乐观的心去应对这一切！”</p>]]></content>
    
    
    <categories>
      
      <category>生活</category>
      
    </categories>
    
    
    <tags>
      
      <tag>片想</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/03/29/hello-world/"/>
    <url>/2023/03/29/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
